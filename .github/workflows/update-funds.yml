name: Update funds.json nightly

on:
  schedule:
    - cron: "30 12 * * *"   # 7:30 AM America/Chicago (CDT)
  workflow_dispatch: {}      # manual "Run workflow" button
  push:
    paths:
      - ".github/workflows/update-funds.yml"
      - "ishares_fixed_income_scraper.py"
      - "batch_export_json.py"
      - "requirements.txt"

permissions:
  contents: write

jobs:
  refresh:
    runs-on: windows-latest

    env:
      # Keep logs quieter and make output paths explicit
      OUTPUT_DIR: ${{ github.workspace }}/data
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      WDM_LOG_LEVEL: "0"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Chrome (for Selenium)
        uses: browser-actions/setup-chrome@v1

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          if (Test-Path .\requirements.txt) {
            pip install -r requirements.txt
          } else {
            pip install selenium webdriver-manager pandas requests lxml beautifulsoup4
          }

      - name: Ensure folders exist (data/ and public/)
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path data   | Out-Null
          New-Item -ItemType Directory -Force -Path public | Out-Null

      - name: Run scraper (writes CSVs into data/)
        run: python .\ishares_fixed_income_scraper.py

      - name: Verify metrics CSV present
        shell: pwsh
        run: |
          $latest = Get-ChildItem -Path data -Filter 'ishares_fixed_income_metrics_*.csv' |
                    Sort-Object LastWriteTime -Descending |
                    Select-Object -First 1
          if (-not $latest) {
            Write-Error "No metrics CSV found in data/. Did the scraper run successfully?"
            exit 1
          }
          "Using CSV: $($latest.FullName)"

      - name: Export to public/funds.json
        run: python .\batch_export_json.py

      - name: Check funds.json exists
        shell: pwsh
        run: |
          if (-not (Test-Path .\public\funds.json)) {
            Write-Error "public\funds.json not found after export."
            exit 1
          }
          Get-Item .\public\funds.json | Format-List *

      - name: Commit & push if changed
        shell: pwsh
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Make sure we are up to date, then stage & commit just funds.json
          git fetch origin
          git checkout $env:GITHUB_REF_NAME
          git pull --rebase

          git add .\public\funds.json
          git diff --cached --quiet
          if ($LASTEXITCODE -eq 0) {
            Write-Host "No changes in public/funds.json"
            exit 0
          }

          $stamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss zzz"
          git commit -m "chore: refresh funds.json ($stamp)"

          $max = 3
          for ($i=1; $i -le $max; $i++) {
            try {
              git push
              Write-Host "Push succeeded"
              break
            } catch {
              Write-Host "Push failed (attempt $i/$max). Rebasing and retryingâ€¦"
              git pull --rebase
              if ($i -eq $max) {
                throw "Failed to push after $max attempts"
              }
            }
          }
